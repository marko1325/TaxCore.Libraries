name: "Deploy to Nuget"

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_PATH: src/Certificates/Certificates.csproj
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'
  
jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true
          configFilePath: .github/workflows/GitVersion.yml
          
      - name: 'Restore packages'
        run: dotnet restore ${{ env.PROJECT_PATH }}
        
      - name: 'Build project'
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release
        
        
      - name: 'Pack project'
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release -p:PackageVersion=${{ steps.gitversion.outputs.semVer }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: 'Push package'
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL }}
        
      - name: Publish project 
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win-x64 -p:PublishSingleFile=false -p:AssemblyVersion=${{ steps.gitversion.outputs.semVer }}

      - name: Zip Files
        uses: vimtor/action-zip@v1
        with:   
          files: src/SecureElementReader.App/bin/Release/net6.0/win-x64/publish/
          dest: ${{ steps.gitversion.outputs.semVer }}.zip
      
      - name: Create Tag     
        uses: Yanjingzhu/FirstJSAction@v1.3
        with:            
          tag: ${{ steps.gitversion.outputs.semVer }}         
          message: ${{ steps.gitversion.outputs.semVer }}
          commit: ${{ steps.gitversion.outputs.Sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Create release 
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gitversion.outputs.semVer }}
          release_name: ${{ steps.gitversion.outputs.semVer }}

      - name: Publish release 
        uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: ${{ steps.gitversion.outputs.semVer }}.zip
          release-url: ${{ steps.create_release.outputs.upload_url }}
        
