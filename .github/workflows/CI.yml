name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Dti.Libraries.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: test\Certificates\Certificates.Test.csproj                # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
   
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
       versionSpec: '5.x'

    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
       useConfigFile: true
       configFilePath: .github/workflows/GitVersion.yml

    #- name: Display GitVersion outputs
    #  run: |
    #    echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
        
    - name: Buld project
      run: dotnet build src/Certificates/Certificates.csproj -c Release
        
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    #- name: Setup MSBuild.exe
    #  uses: microsoft/setup-msbuild@v1.0.2

    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    #- name: Restore the application
    #  run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
    #  env:
    #    Configuration: ${{ matrix.configuration }}
        
    - name: Publish win-x64
      run: dotnet publish src/Certificates/Certificates.csproj -c Release -r win-x64 -p:PublishSingleFile=false -p:AssemblyVersion=${{ steps.gitversion.outputs.SemVer }}
      
    - uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

    - uses: csexton/release-asset-action@v2
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: src/SecureElementReader.App/bin/Release/net6.0/win-x64/publish/*
          release-url: ${{ steps.create_release.outputs.upload_url }}
    
    #- name: Publish win-x86
    #  run: dotnet publish src/Certificates/Certificates.csproj -c Release -r win-x86 -p:PublishSingleFile=true -p:AssemblyVersion=${{ steps.gitversion.outputs.SemVer }}

    #- name: Upload a Build Artifact win-x64
    #  uses: actions/upload-artifact@v3.1.0
    #  with: 
    #    name: win-x64
    #    path: src/SecureElementReader.App/bin/Release/net6.0/win-x64/publish/*
    
    # Disabled because space limit
    #- name: Upload a Build Artifact win-x86
    #  uses: actions/upload-artifact@v3.1.0
    #  with: 
    #    name: win-x86
    #    path: src/SecureElementReader.App/bin/Release/net6.0/win-x86/publish/*

 
